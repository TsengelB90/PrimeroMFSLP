{"version":3,"file":"index.umd.js","sources":["../src/memoize.ts","../src/memoizeWithArgs.ts"],"sourcesContent":["import {\n  createProxy,\n  isChanged,\n  getUntracked,\n  trackMemo,\n} from 'proxy-compare';\n\n// constants from proxy-compare\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\n\ntype HasKeySet = Set<string | symbol>\ntype HasOwnKeySet = Set<string | symbol>\ntype KeysSet = Set<string | symbol>\ntype Used = {\n  [HAS_KEY_PROPERTY]?: HasKeySet;\n  [ALL_OWN_KEYS_PROPERTY]?: true;\n  [HAS_OWN_KEY_PROPERTY]?: HasOwnKeySet;\n  [KEYS_PROPERTY]?: KeysSet;\n};\ntype Affected = WeakMap<object, Used>;\n\nconst isObject = (x: unknown): x is object => typeof x === 'object' && x !== null;\n\nconst untrack = <T>(x: T, seen: Set<T>): T => {\n  if (!isObject(x)) return x;\n  const untrackedObj = getUntracked(x);\n  if (untrackedObj !== null) {\n    trackMemo(x);\n    return untrackedObj;\n  }\n  if (!seen.has(x)) {\n    seen.add(x);\n    Object.entries(x).forEach(([k, v]) => {\n      const vv = untrack(v, seen);\n      if (!Object.is(vv, v)) x[k as keyof T] = vv;\n    });\n  }\n  return x;\n};\n\nconst touchAffected = (dst: unknown, src: unknown, affected: Affected) => {\n  if (!isObject(dst) || !isObject(src)) return;\n  const used = affected.get(getUntracked(src) || src);\n  if (!used) return;\n  used[HAS_KEY_PROPERTY]?.forEach((key) => {\n    Reflect.has(dst, key);\n  });\n  if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n    Reflect.ownKeys(dst);\n  }\n  used[HAS_OWN_KEY_PROPERTY]?.forEach((key) => {\n    Reflect.getOwnPropertyDescriptor(dst, key);\n  });\n  used[KEYS_PROPERTY]?.forEach((key) => {\n    touchAffected(\n      dst[key as keyof typeof dst],\n      src[key as keyof typeof src],\n      affected,\n    );\n  });\n};\n\n// properties\nconst OBJ_PROPERTY = 'o';\nconst RESULT_PROPERTY = 'r';\nconst AFFECTED_PROPERTY = 'a';\n\n/**\n * Create a memoized function\n *\n * @example\n * import { memoize } from 'proxy-memoize';\n *\n * const fn = memoize(obj => ({ sum: obj.a + obj.b, diff: obj.a - obj.b }));\n *\n * @param options\n * @param options.size - (default: 1)\n * @param options.noWeakMap - disable tier-1 cache (default: false)\n */\nexport function memoize<Obj extends object, Result>(\n  fn: (obj: Obj) => Result,\n  options?: { size?: number; noWeakMap?: boolean },\n): (obj: Obj) => Result {\n  let memoListHead = 0;\n  const size = options?.size ?? 1;\n  type Entry = {\n    [OBJ_PROPERTY]: Obj;\n    [RESULT_PROPERTY]: Result;\n    [AFFECTED_PROPERTY]: Affected;\n  }\n  const memoList: Entry[] = [];\n  const resultCache = options?.noWeakMap ? null : new WeakMap<Obj, Entry>();\n  const memoizedFn = (obj: Obj) => {\n    const cache = resultCache?.get(obj);\n    if (cache) {\n      return cache[RESULT_PROPERTY];\n    }\n    for (let i = 0; i < size; i += 1) {\n      const memo = memoList[(memoListHead + i) % size];\n      if (!memo) break;\n      if (!isChanged(memo[OBJ_PROPERTY], obj, memo[AFFECTED_PROPERTY], new WeakMap())) {\n        touchAffected(obj, memo[OBJ_PROPERTY], memo[AFFECTED_PROPERTY]);\n        resultCache?.set(obj, memo);\n        return memo[RESULT_PROPERTY];\n      }\n    }\n    const affected: Affected = new WeakMap();\n    const proxy = createProxy(obj, affected);\n    const result = untrack(fn(proxy), new Set());\n    touchAffected(obj, obj, affected);\n    const entry: Entry = {\n      [OBJ_PROPERTY]: obj,\n      [RESULT_PROPERTY]: result,\n      [AFFECTED_PROPERTY]: affected,\n    };\n    memoListHead = (memoListHead - 1 + size) % size;\n    memoList[memoListHead] = entry;\n    resultCache?.set(obj, entry);\n    return result;\n  };\n  return memoizedFn;\n}\n","import { memoize } from './memoize';\n\ntype Options = Omit<\n  NonNullable<Parameters<typeof memoize>[1]>,\n  'noWeakMap'\n>;\n\n/**\n * Create a memoized function with args\n *\n * @example\n * import { memoizeWithArgs } from 'proxy-memoize';\n *\n * const fn = memoizeWithArgs((a, b) => ({ sum: a.v + b.v, diff: a.v - b.v }));\n *\n * @param options\n * @param options.size - (default: 1)\n */\nexport const memoizeWithArgs = <Args extends unknown[], Result>(\n  fnWithArgs: (...args: Args) => Result,\n  options?: Options,\n) => {\n  const fn = memoize(\n    (args: Args) => fnWithArgs(...args),\n    { ...options, noWeakMap: true },\n  );\n  return (...args: Args) => fn(args);\n};\n"],"names":["HAS_KEY_PROPERTY","ALL_OWN_KEYS_PROPERTY","HAS_OWN_KEY_PROPERTY","KEYS_PROPERTY","isObject","x","untrack","seen","untrackedObj","getUntracked","trackMemo","has","add","Object","entries","forEach","_ref","k","v","vv","is","touchAffected","dst","src","affected","_used$HAS_KEY_PROPERT","_used$HAS_OWN_KEY_PRO","_used$KEYS_PROPERTY","used","get","key","Reflect","ownKeys","getOwnPropertyDescriptor","OBJ_PROPERTY","RESULT_PROPERTY","AFFECTED_PROPERTY","memoize","fn","options","_options$size","memoListHead","size","memoList","resultCache","noWeakMap","WeakMap","memoizedFn","obj","_entry","cache","i","memo","isChanged","set","proxy","createProxy","result","Set","entry","memoizeWithArgs","fnWithArgs","args","apply","_extends","slice","call","arguments"],"mappings":"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"}